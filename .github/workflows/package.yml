name: Package and Upload Helm Chart as GitHub Release Asset

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CHART_NAME: goapi
  CHART_PATH: ./charts/goapi

jobs:
  chart:
    name: Release Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Package Helm Chart
        run: |
          CHART_VERSION=$(echo ${GITHUB_REF} | sed 's/refs\/tags\///')
          helm package ${CHART_PATH} --version=${CHART_VERSION}
          mkdir package
          mv /home/runner/work/goapi/goapi/${CHART_NAME}-${CHART_VERSION}.tgz package/
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./package/${CHART_NAME}-${CHART_VERSION}.tgz 
          asset_name: ${CHART_NAME}-${CHART_VERSION}.tgz 
          asset_content_type: application/gzip



